name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze:
    runs-on: ubuntu-latest
    outputs:
      projects_to_build: ${{ steps.changed_projects.outputs.projects_to_build }}
      projects_to_deploy: ${{ steps.changed_projects.outputs.projects_to_deploy }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    - name: Get list of changed projects
      id: changed_projects
      run: |
        echo "::set-output name=projects_to_build::$(./scripts/get-changed-projects.sh)"
        echo "::set-output name=projects_to_deploy::$(./scripts/get-deployable-projects.sh)"

  build-and-test:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.analyze.outputs.projects_to_build) }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    - name: Build
      run: dotnet build ${{ matrix.project }} --configuration Release
    - name: Test
      run: dotnet test ${{ matrix.project }} --configuration Release

  # deploy:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       project: ${{ fromJson(needs.analyze.outputs.projects_to_deploy) }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: '8.0.x'
  #   - name: Build
  #     run: dotnet build ${{ matrix.project }} --configuration Release
  #   - name: Pack
  #     run: dotnet pack ${{ matrix.project }} --configuration Release
  #   - name: Publish to NuGet
  #     env:
  #       NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
  #     run: dotnet nuget push ${{ matrix.project }}/bin/Release/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
